name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mysqli, curl, mbstring, xml
        tools: composer
        coverage: xdebug
        
    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache/files
        key: dependencies-php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}
        restore-keys: |
          dependencies-php-${{ matrix.php-version }}-composer-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Create test directories
      run: mkdir -p tests/{data,reports}
      
    - name: Run PHPUnit tests
      run: |
        vendor/bin/phpunit --coverage-clover=tests/reports/coverage.xml --log-junit=tests/reports/junit.xml
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: tests/reports/
        
    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.3'
      uses: codecov/codecov-action@v3
      with:
        file: tests/reports/coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: viavi_test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mysqli, curl, mbstring, xml
        tools: composer
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h127.0.0.1 -P3306 -uroot -proot --silent; do
          echo "Waiting for MySQL..."
          sleep 1
        done
        
    - name: Setup test database
      run: |
        mysql -h127.0.0.1 -P3306 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS viavi_test;"
        mysql -h127.0.0.1 -P3306 -uroot -proot -e "GRANT ALL PRIVILEGES ON viavi_test.* TO 'test'@'%';"
        
    - name: Run integration tests
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: viavi_test
        DB_USERNAME: test
        DB_PASSWORD: test
      run: vendor/bin/phpunit --testsuite=Integration

  docker-tests:
    runs-on: ubuntu-latest
    name: Docker Integration Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create test password file
      run: echo "test_password_123" > secrets/db_password.txt
      
    - name: Build and start services
      run: |
        docker compose up -d --build --wait
        
    - name: Wait for services to be healthy
      run: |
        timeout 120 bash -c '
          while ! docker compose ps --format json 2>/dev/null | jq -r ".[].Health // \"starting\"" | grep -q "healthy"; do
            echo "Waiting for services to be healthy..."
            docker compose ps
            sleep 10
          done
        '
        
    - name: Test web interface
      run: |
        curl -f http://localhost:8080 || exit 1
        echo "Web interface is responding"
        
    - name: Test database connectivity
      run: |
        docker compose exec -T db mysql -u viavi -ptest_password_123 viavi -e "SELECT 1;" || exit 1
        echo "Database is accessible"
        
    - name: Test file upload endpoint
      run: |
        # Create a test file
        echo "TEST-123456-20231215-143022" > /tmp/test-123456-20231215-143022.txt
        
        # Test upload (basic connectivity)
        curl -f -X POST http://localhost:8080/main.php || true
        echo "Upload endpoint is accessible"
        
    - name: Check logs for errors
      if: always()
      run: |
        echo "=== Nginx Logs ==="
        docker compose logs nginx || true
        echo "=== PHP-FPM Logs ==="
        docker compose logs php-fpm || true
        echo "=== MySQL Logs ==="
        docker compose logs db || true
        
    - name: Cleanup
      if: always()
      run: docker compose down -v

  code-coverage:
    runs-on: ubuntu-latest
    name: Code Coverage Report
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mysqli, curl, mbstring, xml
        tools: composer
        coverage: xdebug
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Generate coverage report
      run: |
        vendor/bin/phpunit --coverage-html=tests/reports/coverage-html --coverage-text
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: tests/reports/coverage-html/