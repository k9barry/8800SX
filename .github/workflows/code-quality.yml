name: Code Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  php-lint:
    name: PHP Syntax Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
      
      - name: PHP Syntax Check
        run: |
          find . -name "*.php" -not -path "./vendor/*" -not -path "./data/web/app/tcpdf/*" | while read file; do
            php -l "$file"
          done

  php-cs-fixer:
    name: PHP Code Style
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: php-cs-fixer
      
      - name: Run PHP CS Fixer (dry-run)
        run: |
          php-cs-fixer fix --dry-run --diff --verbose \
            --rules=@PSR12 \
            --exclude=vendor \
            --exclude=data/web/app/tcpdf \
            data/web/app/ || true

  yaml-lint:
    name: YAML Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install yamllint
        run: pip install yamllint
      
      - name: Run yamllint
        run: |
          yamllint -d "{extends: default, rules: {line-length: {max: 120}, comments: {min-spaces-from-content: 1}}}" \
            .github/workflows/ docker-compose.yml || true

  markdown-lint:
    name: Markdown Formatting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli
      
      - name: Run markdownlint
        run: |
          markdownlint '**/*.md' \
            --ignore node_modules \
            --ignore vendor \
            --config .markdownlint.json || true

  docker-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: warning

  summary:
    name: Code Quality Summary
    runs-on: ubuntu-latest
    needs: [php-lint, php-cs-fixer, yaml-lint, markdown-lint, docker-lint]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "## Code Quality Check Complete! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All code quality checks have been executed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Checks Performed:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… PHP Syntax Validation" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… PHP Code Style (PSR-12)" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… YAML Validation" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Markdown Linting" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Dockerfile Linting" >> $GITHUB_STEP_SUMMARY
