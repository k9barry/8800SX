name: Code Formatter

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to format'
        required: false
        default: ''
  pull_request:
    types: [opened, synchronize]

jobs:
  format-php:
    name: Format PHP Code
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.event.inputs.branch || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: php-cs-fixer
      
      - name: Create PHP CS Fixer config
        run: |
          cat > .php-cs-fixer.php << 'EOF'
          <?php
          
          $finder = PhpCsFixer\Finder::create()
              ->in(__DIR__ . '/data/web/app')
              ->exclude('tcpdf')
              ->name('*.php')
              ->notName('*.blade.php')
              ->ignoreDotFiles(true)
              ->ignoreVCS(true);
          
          $config = new PhpCsFixer\Config();
          return $config
              ->setRules([
                  '@PSR12' => true,
                  'array_syntax' => ['syntax' => 'short'],
                  'ordered_imports' => ['sort_algorithm' => 'alpha'],
                  'no_unused_imports' => true,
                  'not_operator_with_successor_space' => true,
                  'trailing_comma_in_multiline' => true,
                  'phpdoc_scalar' => true,
                  'unary_operator_spaces' => true,
                  'binary_operator_spaces' => true,
                  'blank_line_before_statement' => [
                      'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],
                  ],
                  'phpdoc_single_line_var_spacing' => true,
                  'phpdoc_var_without_name' => true,
                  'method_argument_space' => [
                      'on_multiline' => 'ensure_fully_multiline',
                      'keep_multiple_spaces_after_comma' => true,
                  ],
              ])
              ->setFinder($finder);
          EOF
      
      - name: Run PHP CS Fixer
        run: |
          echo "Formatting PHP code..."
          php-cs-fixer fix --config=.php-cs-fixer.php --verbose || true
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Code formatting changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No formatting changes needed"
          fi
      
      - name: Commit formatted code
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "style: auto-format PHP code with php-cs-fixer

          Applied PSR-12 coding standards and additional formatting rules:
          - Array syntax standardization
          - Import statement ordering
          - Unused import removal
          - Operator spacing
          - PHPDoc improvements

          [skip ci]"
          git push
      
      - name: Comment on PR
        if: steps.check_changes.outputs.changes == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸŽ¨ Code has been automatically formatted with php-cs-fixer to comply with PSR-12 standards.'
            })
      
      - name: Summary
        run: |
          echo "## Code Formatting Complete! ðŸŽ¨" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_changes.outputs.changes }}" == "true" ]; then
            echo "âœ… Code has been formatted and committed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Standards Applied:" >> $GITHUB_STEP_SUMMARY
            echo "- PSR-12 coding style" >> $GITHUB_STEP_SUMMARY
            echo "- Consistent array syntax" >> $GITHUB_STEP_SUMMARY
            echo "- Ordered imports" >> $GITHUB_STEP_SUMMARY
            echo "- Proper operator spacing" >> $GITHUB_STEP_SUMMARY
            echo "- PHPDoc standardization" >> $GITHUB_STEP_SUMMARY
          else
            echo "âœ… No formatting changes needed - code already complies with standards" >> $GITHUB_STEP_SUMMARY
          fi
