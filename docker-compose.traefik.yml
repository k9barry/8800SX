version: "3.8"

# Example docker-compose file for deploying viavi with Traefik
# This assumes you have Traefik already running in your Docker environment
#
# SETUP INSTRUCTIONS:
# 1. Copy .env.example to .env: cp .env.example .env
# 2. Edit .env and set a secure DB_PASSWORD
# 3. Create Traefik network: docker network create traefik
# 4. Deploy: docker-compose -f docker-compose.traefik.yml up -d

services:
  viavi:
    image: ghcr.io/k9barry/8800sx:unified
    # Or build locally:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.unified
    container_name: viavi
    restart: unless-stopped
    environment:
      - DB_PASSWORD=${DB_PASSWORD:-ChangeMe}
    volumes:
      # Persist database data
      - viavi_data:/var/lib/mysql
      # Persist uploaded files
      - viavi_uploads:/var/www/html/uploads
      # Optional: MySQL logs
      - viavi_logs:/var/log/mysql
    networks:
      - traefik
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"
      
      # HTTP Router
      - "traefik.http.routers.viavi.rule=Host(`viavi.example.com`)"
      - "traefik.http.routers.viavi.entrypoints=web"
      
      # HTTPS Router (recommended for production)
      - "traefik.http.routers.viavi-secure.rule=Host(`viavi.example.com`)"
      - "traefik.http.routers.viavi-secure.entrypoints=websecure"
      - "traefik.http.routers.viavi-secure.tls=true"
      - "traefik.http.routers.viavi-secure.tls.certresolver=letsencrypt"
      
      # Redirect HTTP to HTTPS (optional)
      - "traefik.http.middlewares.viavi-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.viavi-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.viavi.middlewares=viavi-redirect"
      
      # Service configuration
      - "traefik.http.services.viavi.loadbalancer.server.port=80"
      
      # Optional: Add basic auth middleware
      # - "traefik.http.middlewares.viavi-auth.basicauth.users=user:$$apr1$$..."
      # - "traefik.http.routers.viavi-secure.middlewares=viavi-auth"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  viavi_data:
    driver: local
  viavi_uploads:
    driver: local
  viavi_logs:
    driver: local

networks:
  traefik:
    external: true
    # Note: The traefik network should already exist in your environment
    # Create it with: docker network create traefik
