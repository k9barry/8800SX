================================================================================
                    HELPERS.PHP FUNCTION USAGE ANALYSIS
                         Analysis Date: 2025-10-12
================================================================================

TASK: Check the functions in the helper.php file and determine if they are 
      used anywhere in this repo

METHOD:
- Identified all 13 functions defined in data/web/app/helpers.php
- Searched entire repository for usage of each function
- Analyzed internal function dependencies
- Created comprehensive documentation

================================================================================
                              EXECUTIVE SUMMARY
================================================================================

Total Functions Analyzed: 13
Used Functions: 6 (including 2 internal helpers)
Unused Functions: 7

CRITICAL FUNCTIONS (USED HEAVILY):
- translate() ..................... 70+ usages across 10+ files
- convert_datetime() .............. 4 usages in 2 files
- print_error_if_exists() ......... 5 usages in 3 files
- handleFileUpload() .............. 2 usages in 2 files
- sanitize() ...................... Internal (used by handleFileUpload)
- generateUniqueFileName() ........ Internal (used by handleFileUpload)

UNUSED FUNCTIONS (CANDIDATES FOR REMOVAL):
- parse_columns() ................. 0 usages (58 lines)
- get_columns_attributes() ........ 0 usages (18 lines)
- convert_date() .................. 0 usages (8 lines)
- convert_bool() .................. 0 usages (6 lines)
- get_fk_url() .................... 0 usages (15 lines)
- getUploadResultByErrorCode() .... 0 usages (14 lines)
- truncate() ...................... 0 usages (15 lines)

Total unused code: ~120 lines (43% of helpers.php)

================================================================================
                           DETAILED FINDINGS
================================================================================

FUNCTION 1: translate($key, $echo = true, ...$args)
Status: ✅ CRITICAL - HEAVILY USED
Usage: 70+ times across multiple files
Purpose: Internationalization/localization
Files Using It:
  - alignments-index.php (multiple instances)
  - alignments-delete.php
  - alignments-update.php
  - alignments-create.php
  - alignments-read.php
  - alignments-view.php
  - alignments-pdf.php
  - navbar.php
  - error.php
  - upload.php
Recommendation: KEEP - Essential functionality

FUNCTION 2: convert_datetime($date_str)
Status: ✅ USED
Usage: 4 times in 2 files
Purpose: Format datetime as 'Y-m-d H:i:s' with HTML escaping
Files Using It:
  - alignments-index.php (2 times)
  - alignments-read.php (2 times)
Recommendation: KEEP - Required for date display

FUNCTION 3: print_error_if_exists($error)
Status: ✅ USED
Usage: 5 times in 3 files
Purpose: Display error messages in Bootstrap alerts
Files Using It:
  - alignments-delete.php (1 time)
  - alignments-update.php (2 times)
  - alignments-create.php (2 times)
Recommendation: KEEP - Error handling utility

FUNCTION 4: handleFileUpload($FILE)
Status: ✅ USED
Usage: 2 times in 2 files
Purpose: Secure file upload with validation
Files Using It:
  - alignments-update.php (1 time)
  - alignments-create.php (1 time)
Internal Dependencies:
  - Calls sanitize() on line 167
  - Calls generateUniqueFileName() on line 168
Recommendation: KEEP - File upload functionality

FUNCTION 5: sanitize($fileName)
Status: ✅ USED (INTERNAL)
Usage: Called internally by handleFileUpload()
Purpose: Remove illegal characters from filenames
Recommendation: KEEP - Required by handleFileUpload()

FUNCTION 6: generateUniqueFileName($originalFileName)
Status: ✅ USED (INTERNAL)
Usage: Called internally by handleFileUpload()
Purpose: Create unique filename with timestamp and salt
Recommendation: KEEP - Required by handleFileUpload()

FUNCTION 7: parse_columns($table_name, $postdata)
Status: ❌ NOT USED
Lines: 58 (function body: lines 3-58)
Purpose: Retrieves and enhances postdata for CRUD operations
Usage: 0 instances found in entire repository
Analysis: Complex function designed for dynamic CRUD. Not used.
Recommendation: SAFE TO REMOVE - No dependencies

FUNCTION 8: get_columns_attributes($table_name, $column)
Status: ❌ NOT USED
Lines: 18 (function body: lines 63-80)
Purpose: Gets column metadata from INFORMATION_SCHEMA
Usage: 0 instances found in entire repository
Analysis: Utility for dynamic form generation. Not implemented.
Recommendation: SAFE TO REMOVE - No dependencies

FUNCTION 9: convert_date($date_str)
Status: ❌ NOT USED
Lines: 8 (function body: lines 95-102)
Purpose: Format date as 'Y-m-d' (without time)
Usage: 0 instances found in entire repository
Analysis: Redundant. Application uses convert_datetime() instead.
Recommendation: SAFE TO REMOVE - Redundant function

FUNCTION 10: convert_bool($var)
Status: ❌ NOT USED
Lines: 6 (function body: lines 113-118)
Purpose: Convert boolean to "True"/"False" string
Usage: 0 instances found in entire repository
Analysis: No boolean columns in use. Not needed.
Recommendation: SAFE TO REMOVE - No use case

FUNCTION 11: get_fk_url($value, $fk_table, $fk_column, $representation, ...)
Status: ❌ NOT USED
Lines: 15 (function body: lines 120-134)
Purpose: Generate URLs for foreign key relationships
Usage: 0 instances found in entire repository
Analysis: Foreign key navigation not implemented.
Recommendation: SAFE TO REMOVE - Feature not implemented

FUNCTION 12: getUploadResultByErrorCode($code)
Status: ❌ NOT USED
Lines: 14 (function body: lines 248-261)
Purpose: Map PHP upload error codes to messages
Usage: 0 instances found in entire repository
Analysis: Could improve error messaging, but not integrated.
Recommendation: CONSIDER KEEPING - Potentially useful

FUNCTION 13: truncate($string, $length = 15)
Status: ❌ NOT USED
Lines: 15 (function body: lines 265-279)
Purpose: Truncate strings with ellipsis
Usage: 0 instances found in entire repository
Analysis: Could be useful for long text display.
Recommendation: CONSIDER KEEPING - Potentially useful

================================================================================
                              RECOMMENDATIONS
================================================================================

OPTION 1: CONSERVATIVE (Keep all functions)
Pros: Functions available if needed later
Cons: 134 lines of unused code, maintenance burden
Action: No changes needed

OPTION 2: BALANCED (Remove clearly unused, keep utilities)
Pros: Cleaner code while preserving potential utilities
Cons: Still some unused code remains
Action: Remove 5 functions, keep 2 utilities
  Remove:
    - parse_columns() (58 lines)
    - get_columns_attributes() (18 lines)
    - convert_date() (8 lines)
    - convert_bool() (6 lines)
    - get_fk_url() (15 lines)
  Keep for future use:
    - truncate() (could improve UI display)
    - getUploadResultByErrorCode() (could improve error messages)

OPTION 3: AGGRESSIVE (Remove all unused)
Pros: Cleanest codebase, easy to maintain
Cons: Need to re-implement if needed later
Action: Remove all 8 unused functions (134 lines)

================================================================================
                            IMPACT ASSESSMENT
================================================================================

Removing unused functions will:
✓ Reduce file size by 48% (134 lines)
✓ Improve code maintainability
✓ Eliminate confusion about what's used
✓ Reduce testing surface area
✗ No impact on functionality (functions not used)
✗ No breaking changes

Risk Level: LOW
- No functions are called anywhere in the codebase
- No internal dependencies on unused functions
- Safe to remove without testing

================================================================================
                         SEARCH METHODOLOGY
================================================================================

Commands used to verify usage:

# Search for function usage across all PHP files
grep -r "function_name" /path/to/app --include="*.php" | grep -v "helpers.php"

# Count total usages
grep -r "translate(" /path/to/app --include="*.php" | grep -v "helpers.php" | wc -l

# List all function definitions
grep -n "^function " /path/to/helpers.php

# Verify internal function calls
grep -n "sanitize\|generateUniqueFileName" /path/to/helpers.php

Search scope: /home/runner/work/viavi/viavi/data/web/app
Files searched: All *.php files
Exclusions: helpers.php itself (to avoid counting definitions)

================================================================================
                         DOCUMENTATION CREATED
================================================================================

1. HELPERS_FUNCTION_USAGE_ANALYSIS.md (7.7 KB)
   - Comprehensive analysis with detailed descriptions
   - Usage examples
   - Recommendations

2. HELPERS_QUICK_REFERENCE.md (3.6 KB)
   - Quick lookup table format
   - Usage counts
   - Removal impact assessment

3. ANALYSIS_SUMMARY.txt (this file)
   - Executive summary
   - Detailed findings for all 13 functions
   - Methodology documentation

================================================================================
                              CONCLUSION
================================================================================

Out of 13 functions in helpers.php:
- 5 are actively used and critical to application functionality
- 8 are unused and can be safely removed to reduce code complexity

The unused functions appear to be remnants of a more generic CRUD framework
that was partially implemented but not fully utilized in the final application.

Recommended Action: Implement OPTION 2 (Balanced approach)
- Remove 5 clearly unused functions (parse_columns, get_columns_attributes,
  convert_date, convert_bool, get_fk_url)
- Keep truncate() and getUploadResultByErrorCode() as they could be useful
- Document the decision for future maintainers

================================================================================
END OF ANALYSIS
================================================================================
